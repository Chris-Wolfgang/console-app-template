// TODO If you are using UsSingleEnvironment then you can delete this file
{
    // TODO : Add your connection strings here
    "ConnectionStrings": {

    },
    "Serilog": {
        // TODO : Specifiy the where logs should be written to. You can add additional sinks and remove the ones you don't need.
        "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],

        // TODO : Specify the minimum level for all logger logs to be written.
        // Possible values are: Verbose, Debug, Information, Warning, Error, Fatal
        "MinimumLevel": {
            // TODO : Specify the minimum level for all logger logs to be written.
            // Possible values are: Verbose, Debug, Information, Warning, Error, Fatal
            "Default": "Verbose",

            // Override the minimum level for specific namespaces or classes
            "Override": {
                // Log messages from the Microsoft namespace at the Warning level or higher. Possible values are: Verbose, Debug, Information, Warning, Error, Fatal
                "Microsoft": "Warning",

                // Log messages from the System namespace at the Warning level or higher. Possible values are: Verbose, Debug, Information, Warning, Error, Fatal
                "System": "Warning"
            }
        },

        "WriteTo": [
            {
                "Name": "Console",
                "Args": {
                    // Sets the format of log entries
                    "outputTemplate": "{Level:u3} {Message:lj}{NewLine}{Exception}",

                    // Sets the minimum level for the console sink. Possible values are: Verbose, Debug, Information, Warning, Error, Fatal
                    "restrictedToMinimumLevel": "Information"                    
                }
            },
            {
                // File sink configuration
                "Name": "File",
                "Args": {
                    // Specify the location for the logs files
                    "path": "C:\\logs\\ConsoleAppTemplate\\ConsoleAppTemplate-.log",

                    // When true will create a new file if the current file size exceeds the fileSizeLimitBytes
                    "rollOnFileSizeLimit": true,

                    // Creates a new file everyday
                    "rollingInterval": "Day",

                    // Sets the maximum size of the log file in bytes
                    "fileSizeLimitBytes": "10485760", // ~10 MB

                    // Sets the format of log entries
                    "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}",

                    // Sets the minimum level for the file sink. Possible values are: Verbose, Debug, Information, Warning, Error, Fatal
                    "restrictedToMinimumLevel": "Verbose"
                }
            }
        ],
        "Enrich": [
            // Routes framework log messages through Serilog, so you can get information about the framework's internal operations.
            "FromLogContext",

            // Adds MachineName based on either %COMPUTERNAME% (Windows) or $HOSTNAME (macOS, Linux)
            // "WithMachineName",

            // Adds EnvironmentName based on ASPNETCORE_ENVIRONMENT or DOTNET_ENVIRONMENT
            "WithEnvironmentName"

            // Adds EnvironmentUserName based on USERNAME and USERDOMAIN
            //"WithEnvironmentUserName",
        ]
    },

    // TODO : Add your app settings here creating multiple sections as necessary
    "SampleConfiguration": {
        "CommandTimeout": 1000
    },
    // TODO : Add your app settings here creating multiple sections as necessary
    "Properties": {
    // TODO : Replace with your application name from template
        "Application": "Sample"
    }
}
