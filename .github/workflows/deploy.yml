name: Build and Publish .NET Package

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # e.g., v1.0.0

jobs:
  build-and-publish:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        shell: pwsh
        run: |
          Get-ChildItem -Path "src" -Recurse -Filter *.csproj | ForEach-Object {
            dotnet restore $_.FullName
          }

      - name: Build projects
        shell: pwsh
        run: |
          Get-ChildItem -Path "src" -Recurse -Filter *.csproj | ForEach-Object {
            dotnet build $_.FullName --configuration Release --no-restore
          }

      - name: Run unit tests
        shell: pwsh
        run: |
          Get-ChildItem -Path "src" -Recurse -Filter *Tests.Unit.csproj | ForEach-Object {
            dotnet test $_.FullName --configuration Release --no-build --verbosity normal
          }

      - name: Pack projects
        shell: pwsh
        run: |
          mkdir ./nupkg
          Get-ChildItem -Path "src" -Directory | ForEach-Object {
            $csproj = Get-ChildItem -Path $_.FullName -Filter *.csproj
            if ($csproj) {
              dotnet pack $csproj.FullName --configuration Release --no-build --output ./nupkg
            }
          }

          
      - name: Push packages to NuGet
        if: startsWith(github.ref, 'refs/tags/v')
        shell: pwsh
        run: |
          Get-ChildItem -Path "./nupkg" -Filter *.nupkg | ForEach-Object {
            dotnet nuget push $_.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
          }
